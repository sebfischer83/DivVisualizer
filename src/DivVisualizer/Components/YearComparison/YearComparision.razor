@using TagEChartsBlazor.Components
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@if (InitSuccess)
{
    <AntDesign.Row>
        <AntDesign.Col Span="16">
            <ECharts Style="width: 100%; height: 400px;" @ref="OverviewChart" theme="infographic"
                 OnClick="@(new(async (param, chart) =>
                    {

                    }))">
                <Dataset>

                </Dataset>
                <TagEChartsBlazor.Components.Title text="Verlauf der letzten 10 Jahre"></TagEChartsBlazor.Components.Title>
                <TagEChartsBlazor.Components.Tooltip trigger="item" triggerOn="mousemove" formatter=" {c}€ "></TagEChartsBlazor.Components.Tooltip>
                <XAxis type="category" z="10">
                    @foreach (var item in Years)
                    {
                        var tmp = item;
                        <Data value="tmp">

                        </Data>
                        @* crazy stuff because razor yields always the last one and js functions are always async and can't be used here *@
                        <AxisLabel inside="false" rotate="-40" formatter="@($"(value) => {{ return window.xaxisdesc[value]; }}")">
                            <TextStyle fontSize="10" fontWeight="normal">

                            </TextStyle>
                        </AxisLabel>
                    }
                </XAxis>
                <YAxis>
                    <AxisLabel formatter="(value, index) => {return value + '€';}"></AxisLabel>
                </YAxis>
                <Toolbox>
                    <Feature>
                        <SaveAsImage type="png" pixelRatio="2"></SaveAsImage>
                        <DataView></DataView>
                        <MagicType type="@(new string[] {"line", "bar"})"></MagicType>
                    </Feature>
                </Toolbox>
                <Series name="Dividenden" type="bar" data="@SumValuesPerYear" hoverAnimation="true">
                </Series>
            </ECharts>
        </AntDesign.Col>
        <AntDesign.Col Span="8">
            <Card Style="height:400px" BodyStyle="overflow:auto;">
                <Table DataSource="@DividendSumsYears" HidePagination="@true" Size=@TableSize.Small>
                    <AntDesign.Column @bind-Field="@context.Year" Title="Jahr"></AntDesign.Column>
                    @if (AppState.Value.IncomeType == DivVisualizer.Data.IncomeType.Gross)
                {
                    <AntDesign.Column Title="Summe" @bind-Field="@context.SumGross">
                        @context.SumGross €
                    </AntDesign.Column>
                }
                else
                {
                    <AntDesign.Column Title="Summe" @bind-Field="@context.SumNet">
                         @context.SumNet €
                    </AntDesign.Column>
                }
                
                 <AntDesign.Column Title="Veränderung" TData="string">
                    @{
                        var desc = XAxisDescriptions[context.Year.ToString()];
                        desc = desc.Replace(context.Year.ToString(), "").Trim().TrimStart('(').TrimEnd(')');
                    }
                    <i style="@($"color: {(desc.StartsWith("-") ? "red" : "green")}")">
                    @desc
                    </i>
                 </AntDesign.Column>
                @{
                    var sum = DividendSumsYears.Sum(a =>
                            {
                                return (AppState.Value.IncomeType == DivVisualizer.Data.IncomeType.Gross) ? a.SumGross : a.SumNet;
                            });
                    sum = Math.Round(sum, 2);
                }
                <SummaryRow>
                     <SummaryCell>
                         Summe
                     </SummaryCell>
                     <SummaryCell>
                         @sum
                     </SummaryCell>
                 </SummaryRow>
            </Table>
        </Card>
    </AntDesign.Col>
</AntDesign.Row>
    <AntDesign.Row>
        <AntDesign.Col Span="24">
            <ECharts Style="width: 100%; height: 400px;" @ref="OverviewChart" theme="infographic"
                 OnClick="@(new(async (param, chart) =>
                    {

                    }))">
                <Dataset>

                </Dataset>
                <TagEChartsBlazor.Components.Title text="Dividendenübersicht"></TagEChartsBlazor.Components.Title>
                <TagEChartsBlazor.Components.Tooltip trigger="item" triggerOn="mousemove" formatter=" {c}€ "></TagEChartsBlazor.Components.Tooltip>
                <XAxis type="category" z="10">
                    @foreach (var item in Years)
                    {
                        var tmp = item;
                        <Data value="tmp">

                        </Data>
                        <AxisLabel inside="false" rotate="-20" formatter="@($"(value) => {{ return value; }}")">
                            <TextStyle fontSize="10" fontWeight="normal">

                            </TextStyle>
                        </AxisLabel>
                    }
                </XAxis>
                <YAxis>
                    <AxisLabel formatter="(value, index) => {return value + '€';}"></AxisLabel>
                </YAxis>
                <Toolbox>
                    <Feature>
                        <SaveAsImage type="png" pixelRatio="2"></SaveAsImage>
                        <DataView></DataView>
                        <MagicType type="@(new string[] {"line", "bar"})"></MagicType>
                    </Feature>
                </Toolbox>
                <Series name="Dividenden" type="bar" data="@SumValuesPerYear" hoverAnimation="true">
                </Series>
            </ECharts>
        </AntDesign.Col>
    </AntDesign.Row>

}