@inherits Microsoft.AspNetCore.Components.LayoutComponentBase
@namespace DivVisualizer.Shared

@*<HeadContent>
    @if (baseLayerLuminance == 1)
    {
        <link href="_content/AntDesign/css/ant-design-blazor.css" rel="stylesheet" />
        <link href="DivVisualizer.styles.css" rel="stylesheet">
    }
    else
    {
        <link href="_content/AntDesign/css/ant-design-blazor.dark.css" rel="stylesheet" />
        <link href="DivVisualizer.styles.css" rel="stylesheet">
    }
</HeadContent>*@

@*<FluentDesignSystemProvider BaseLayerLuminance=@baseLayerLuminance>*@
    <div class="container">
        <div class="header">
            <div class="header__container">
                <div class="header__theme" id="themeSwitcher" style="display:none">
                   @*<FluentSwitch @onchange=SwitchTheme>
                        <span slot="checked-message"><i class="fa-regular fa-moon fa-lg"></i></span>
                        <span slot="unchecked-message"><i class="fa-solid fa-sun fa-lg"></i></span>
                    </FluentSwitch>*@
                </div>
            </div>
        </div>
        <div>
            <NavMenu />
        </div>

        <div class="content">
            <main>

                <ErrorBoundary @ref="errorBoundary">
                    <ChildContent>
                        @Body
                    </ChildContent>
                    <ErrorContent Context="ex">
                        <p class="error">@ex.Message</p>
                    </ErrorContent>
                </ErrorBoundary>
            </main>
        </div>
    </div>
@*</FluentDesignSystemProvider>*@

@code
{
    float? baseLayerLuminance;
    ErrorBoundary? errorBoundary;

    public void SwitchTheme()
    {
        baseLayerLuminance = baseLayerLuminance == 0 ? 1 : 0;
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        baseLayerLuminance = 1;
        StateHasChanged();
    }

    protected override void OnParametersSet()
    {
        errorBoundary?.Recover();
    }
}
